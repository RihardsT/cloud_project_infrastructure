upstream web {
  ip_hash;
  server web:8000;
}

upstream jenkins {
  ip_hash;
  server jenkins:8080;
}

upstream netdata {
    server netdata:19999;
    keepalive 64;
}

server {
    listen 8001;
    listen 8000 ssl;

    server_name rudenspavasaris.id.lv www.rudenspavasaris.id.lv;
    ssl_certificate     /etc/nginx/ssl/rudenspavasaris.id.lv/fullchain1.pem;
    ssl_certificate_key /etc/nginx/ssl/rudenspavasaris.id.lv/privkey1.pem;
    ssl_trusted_certificate /etc/nginx/ssl/rudenspavasaris.id.lv/chain1.pem;

    ### Jenkins portion
    location ^~ /jenkins/ {

      # Convert inbound WAN requests for https://domain.tld/jenkins/ to local network requests for http://10.0.0.100:8080/jenkins/
      proxy_pass http://jenkins/jenkins/;

      # Rewrite HTTPS requests from WAN to HTTP requests on LAN
      proxy_redirect http:// https://;

      # The following settings from https://wiki.jenkins-ci.org/display/JENKINS/Running+Hudson+behind+Nginx
      sendfile off;

      proxy_set_header   Host             $host:$server_port;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_max_temp_file_size 0;

      #this is the maximum upload size
      client_max_body_size       10m;
      client_body_buffer_size    128k;

      proxy_connect_timeout      90;
      proxy_send_timeout         90;
      proxy_read_timeout         90;

      proxy_buffer_size          4k;
      proxy_buffers              4 32k;
      proxy_busy_buffers_size    64k;
      proxy_temp_file_write_size 64k;

      # Required for new HTTP-based CLI
      proxy_http_version 1.1;
      proxy_request_buffering off;
    }

    ### Netdata portion
    location /netdata {
      return 301 /netdata/;
    }

    location ~ /netdata/(?<ndpath>.*) {
      proxy_redirect http:// https://;
      proxy_set_header Host $host;

      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_http_version 1.1;
      proxy_pass_request_headers on;
      proxy_set_header Connection "keep-alive";
      proxy_store off;
      proxy_pass http://netdata/$ndpath$is_args$args;

      gzip on;
      gzip_proxied any;
      gzip_types *;
    }

    ### Django portion
    location /static/ {
        autoindex on;
        alias /static/;
    }
    location / {
        proxy_pass http://web/;
    }

    ### Redirect to https
    if ($scheme = http) {
        return 301 https://$server_name$request_uri;
    }
}
